version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - chromadb-data:/app/data/chromadb
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_PROJECT_NAME=Aetherion AR Backend
      - API_DEBUG=true
      - CORS_ORIGINS=http://localhost:3000,https://aetherion-ar.example.com
      - JWT_SECRET_KEY=dev_jwt_secret_key_replace_in_production
      - JWT_REFRESH_SECRET_KEY=dev_jwt_refresh_secret_key_replace_in_production
      - MONGO_URI=mongodb://mongo:27017/aetherion
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - redis
      - kafka

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  zookeeper:
    image: zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1
      - ZOO_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data

volumes:
  mongo-data:
  redis-data:
  kafka-data:
  chromadb-data: